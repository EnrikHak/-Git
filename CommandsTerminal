# Полезные команды для работы с Git

## Первоначальная настройка Git

- *git config --global user.name <Имя>* - установка имени пользователя, от которого будут идти коммиты.

- *git config -- global user.email <Почта.com>* - установка  адреса электронной почты. **Важно**: адрес должен совпадать с тем, на который зарегестрирован аккаунт в Гитхабе.

- *git config --global core.editor <название текстового редактора>* - установка текстового редактора, в котором будут открываться файлы для решения конфликтов.

- *git config --list* - можно посмотреть список всех установленных настроек.

## Клонирование репозитория

- *git clone <указать адрес>* - репозиторий клонируется в текущую выбранную папку в консоли.

## Работа с изменениями

- *git pull* - получить последнюю версию. **Внимание**, вызов этой команды сотрет все незафиксированные изменения.

- *git status* - посмотреть статус файлов. Эта команда покажет файлы, в которых были произведены изменения, удаленные и новые, требующие добавления.

- *git add <имя файла>* - добавить отслеживание новых файлов. В случае если много файлов для добавления используют команду *git add .* - которая добавляет отслеживание для всех новых файлов из текущей директории.

- *git add -A* - добавляет удаленные файлы, не только из текущей директории, но и из всего локального репозитория.

- *git rm <имя файла>* - удаление файлов по их имени.

- *git commit -m "Коментарий к коммиту" - данная команда используется для добавления коммита. Это фиксация изменений, так как до выполнения этой команды ваши локальные изменения некуда не запишуться.

- *git reset* - команда отменяет все незафиксированные изменения. Используется в случае, если внесены изменения и необходимо их быстро отменить. По умолчанию команда удаляет только изиндекса.

- *git reset --hard* - безвозвратно удаляет незафиксированные текущие изменения из локального рапозитория и из индекса.

- *git push* - команда отправляет все зафиксированные изменения на удаленный репозиторий.

## Работа с ветками

- *git branch* - просмотреть список веток в локальном репозитории.

- *git branch -r* - просмотреть список веток в удаленном репозитории

- *git branch <имя ветки>* - создаст новую ветку с указанным именем.

- *git checkout <имя ветки>* - перейдет на ветку с указанным именем.

- *git checkout -b <имя ветки>* - создать ветку с указанным именем и автоматически переключиться на нее.

- *git push origin <имя ветки>* - отправить ветку на сервер.

- *git checkout origin/<имя ветки> -b <имя ветки>* - команда забирает на компьютер ветки с удаленного репозитория.

## Прочее

- *git clean -f -d* - удаление файлов. После работы в репозитории могут остаться разные ненужные, неотслеживаемые файлы и прочий мусор.
